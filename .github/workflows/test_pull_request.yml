name: Test and Static Analysis (Pull Request)

on: pull_request

jobs:
  check-version-in-composer-json:
    name: Check Version
    runs-on: ubuntu-latest

    steps:
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          tools: composer:v2

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: PHP Version Check
        run: php -v

      - name: Validate Composer JSON
        run: composer validate

      - name: Get Version From Comopser JSON
        id: new-version
        run: |
          echo version=$(cat composer.json | grep version | head -1 | grep -Po '\d+\.\d+\.\d+') >> $GITHUB_OUTPUT
      
      - name: Show New Version
        run: echo "version=${{ steps.new-version.outputs.version }}"

      - name: Show Tags
        run: git tag

      - name: Check If The Version Is Not In The Tag List
        run: |
          for tag in `git tag`
          do
            if [ $tag = ${{ steps.new-version.outputs.version }} ]; then
              echo "version ${{ steps.new-version.outputs.version }} already exists."
              exit 1
            fi
          done
          echo "OK."

  test-and-static-analysis:
    name: Test and Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: ['8.1', '8.2', '8.3']

    steps:
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: xdebug
          tools: composer:v2

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '14.x'

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: PHP Version Check
        run: php -v

      - name: Validate Composer JSON
        run: composer validate

      - name: Run Composer Install
        id: composerinstall
        run: composer install --no-interaction

      - name: PHP Lint
        run: ./vendor/bin/parallel-lint src tests examples

      - name: Neon Lint
        run: ./vendor/nette/neon/bin/neon-lint conf

      - name: PHP MD
        run: |
          ./vendor/bin/phpmd --version
          ./vendor/bin/phpmd ./src/ ./examples/ text phpmd.xml

      - name: PHP Code Sniffer
        run: |
          ./vendor/bin/phpcs --version
          ./vendor/bin/phpcs --ignore=vendor --standard=phpcs.xml -s -p .

      - name: PHPStan
        run: |
          ./vendor/bin/phpstan --version
          ./vendor/bin/phpstan analyze -c phpstan.neon

      - name: Unit tests
        run: |
          mkdir -p build/logs
          ./vendor/bin/phpunit --version
          echo "Test suite All"
          ./vendor/bin/phpunit ./tests/
  
  code-coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: ['8.1']

    steps:
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: xdebug
          tools: composer:v2

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '14.x'

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Composer
        run: composer install --no-interaction

      - name: Update PHPUnit for Code Coverage
        run: composer require phpunit/phpunit:^10.5 sebastian/version:* --with-all-dependencies

      - name: PHP Lint
        run: ./vendor/bin/parallel-lint src tests examples

      - name: Unit tests
        run: |
          mkdir -p build/logs
          XDEBUG_MODE=coverage ./vendor/bin/phpunit ./tests/ --coverage-clover build/logs/clover.xml --coverage-filter=./src/
